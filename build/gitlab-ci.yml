image: golang:latest

before_script:
  - echo "Acquire::http::Proxy \"http://proxy-us.intel.com:911\";" >> /etc/apt/apt.conf
  - echo "Acquire::https::Proxy \"http://proxy-us.intel.com:911\";" >> /etc/apt/apt.conf
  - git config --global http.proxy "http://proxy-us.intel.com:911"
  - echo "[http \"https://gitlab.devtools.intel.com\"]" >> ~/.gitconfig
  - echo "        proxy = \"\"" >> ~/.gitconfig
  - cd $CI_PROJECT_DIR
variables:
  POSTGRES_DB: wls
  POSTGRES_USER: runner
  POSTGRES_PASSWORD: "test"
  HTTPS_PROXY: http://proxy-us.intel.com:911
  no_proxy: ".intel.com"

stages:
  - build
  - test
  - deploy

test:
  services:
    - postgres:latest
  stage: test
  tags:
    - go
  script:
    - go test ./... -tags=integration -coverpkg=./... -coverprofile cover.out
    - go tool cover -html=cover.out -o cover.html
  artifacts:
    paths:
      - "cover.html"

compile:
  stage: build
  tags:
    - go
  script:
    - go build ./...

installer:
  stage: deploy
  tags:
    - go
  script:
    - apt-get update && apt-get install -y makeself
    - make installer
    - cp ./docs/swagger.yml ./out/swagger.yml
  artifacts:
    paths:
      - "out/wls-*.bin"
      - "out/swagger.yml"
    expire_in: 1 week

docker:
  stage: deploy
  tags: 
    - go
    - docker
  script:
    - curl -sSL https://get.docker.com/ | sh
    - apt-get update && apt-get install -y makeself
    - make docker
    - cp ./docs/swagger.yml ./out/swagger.yml
  artifacts:
    paths:
      - "out/*.tar"
      - "out/swagger.yml"
    expire_in: 1 week
