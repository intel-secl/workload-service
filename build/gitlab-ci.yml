image: golang:1.12

before_script:
  - git config --global http."https://gitlab.devtools.intel.com".proxy ""
  - git config --global url."https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.devtools.intel.com".insteadOf "https://gitlab.devtools.intel.com"

  - echo "[http \"https://gitlab.devtools.intel.com\"]" >> ~/.gitconfig
  - echo "        proxy = \"\"" >> ~/.gitconfig
  - cd $CI_PROJECT_DIR
  - apt update -yq && apt install -yq makeself

variables:
  POSTGRES_DB: wls
  POSTGRES_USER: runner
  POSTGRES_PASSWORD: "test"
  http_proxy: http://proxy-us.intel.com:911
  https_proxy: http://proxy-us.intel.com:911
  no_proxy: "gitlab.devtools.intel.com,localhost,127.0.0.1,0.0.0.0"
  NO_PROXY: "gitlab.devtools.intel.com,localhost,127.0.0.1,0.0.0.0"
  DEBIAN_FRONTEND: noninteractive

stages:
  - build
  - deploy

# test:
  # services:
    # - postgres:latest
  # stage: test
  # tags:
    # - go
  # script:
    # - go test ./... -tags=integration -coverpkg=./... -coverprofile cover.out
    # - go tool cover -func cover.out
    # - go tool cover -html=cover.out -o cover.html
  # artifacts:
    # paths:
      # - "cover.html"

compile:
  stage: build
  tags:
    - go
  script:
    - go build ./...

installer:
  stage: deploy
  tags:
    - go
  script:
    - apt-get update && apt-get install -y makeself
    - make installer
    - cp ./docs/swagger.yml ./out/swagger.yml
  artifacts:
    paths:
      - "out/wls-*.bin"
      - "out/swagger.yml"
    expire_in: 1 week

docker:
  stage: deploy
  tags: 
    - go
    - docker
  script:
    - curl -sSL https://get.docker.com/ | sh
    - apt-get update && apt-get install -y makeself
    - make docker
    - cp ./docs/swagger.yml ./out/swagger.yml
  artifacts:
    paths:
      - "out/*.tar"
      - "out/swagger.yml"
    expire_in: 1 week
